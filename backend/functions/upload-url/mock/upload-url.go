// Code generated by MockGen. DO NOT EDIT.
// Source: ../upload-url.go

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
	time "time"
)

// MockURLGetter is a mock of URLGetter interface
type MockURLGetter struct {
	ctrl     *gomock.Controller
	recorder *MockURLGetterMockRecorder
}

// MockURLGetterMockRecorder is the mock recorder for MockURLGetter
type MockURLGetterMockRecorder struct {
	mock *MockURLGetter
}

// NewMockURLGetter creates a new mock instance
func NewMockURLGetter(ctrl *gomock.Controller) *MockURLGetter {
	mock := &MockURLGetter{ctrl: ctrl}
	mock.recorder = &MockURLGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockURLGetter) EXPECT() *MockURLGetterMockRecorder {
	return m.recorder
}

// GetUploadPresignedURL mocks base method
func (m *MockURLGetter) GetUploadPresignedURL(userID, fileName string, exp time.Duration) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUploadPresignedURL", userID, fileName, exp)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUploadPresignedURL indicates an expected call of GetUploadPresignedURL
func (mr *MockURLGetterMockRecorder) GetUploadPresignedURL(userID, fileName, exp interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUploadPresignedURL", reflect.TypeOf((*MockURLGetter)(nil).GetUploadPresignedURL), userID, fileName, exp)
}
